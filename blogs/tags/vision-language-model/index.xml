<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Vision-Language-Model on Lil&#39;Log</title>
    <link>https://lilianweng.github.io/tags/vision-language-model/</link>
    <description>Recent content in Vision-Language-Model on Lil&#39;Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Jun 2022 15:10:30 -0700</lastBuildDate><atom:link href="https://lilianweng.github.io/tags/vision-language-model/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generalized Visual Language Models</title>
      <link>https://lilianweng.github.io/posts/2022-06-09-vlm/</link>
      <pubDate>Thu, 09 Jun 2022 15:10:30 -0700</pubDate>
      
      <guid>https://lilianweng.github.io/posts/2022-06-09-vlm/</guid>
      <description>&lt;p&gt;Processing images to generate text, such as image captioning and visual question-answering, has been studied for years. Traditionally such systems rely on an object detection network as a vision encoder to capture visual features and then produce text via a text decoder. Given a large amount of existing literature, in this post, I would like to only focus on one approach for solving vision language tasks, which is to &lt;em&gt;extend pre-trained &lt;a href=&#34;https://lilianweng.github.io/posts/2019-01-31-lm/&#34;&gt;generalized language models&lt;/a&gt; to be capable of consuming visual signals&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
